{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAgCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,GACFF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEtDG,EAAK,sBAAqCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GACjDA,E,IAvCMS,SAASC,cAAc,SAK/BC,iBAAiB,UAEtB,SAAiBC,GACfA,EAAEC,iBACF,IAAgCC,EAAAF,EAAEG,cAAcC,SAAxChB,EAAwBc,EAAxBd,MAAOiB,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OACjBC,EAASC,OAAOpB,EAAMqB,OACpBC,EAAUF,OAAOH,EAAKI,OACtBE,EAAQH,OAAOF,EAAOG,OAC5BG,QAAQC,IAAIN,GAEZK,QAAQC,IAAIH,GAIZ,IAFA,IAAIvB,EAAW,EAEN2B,EAAI,EAAGA,EAAIH,EAAOG,GAAK,EAC9B5B,EAAcC,EAAUoB,GACrBQ,MAAK,SAAAC,G,OAAUhC,EAAAiC,OAAOC,QAAQF,E,IAE9BG,OAAM,SAAAC,G,OAASpC,EAAAiC,OAAOI,QAAQD,E,IAEjCjC,GAAY,EACZoB,GAAkBG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n// const delay = document.querySelector('[name=\"delay\"]');\n// const step = document.querySelector('[name=\"step\"]');\n// const amount = document.querySelector('[name=\"amount\"]');\n\nform.addEventListener('submit', objForm);\n// console.dir(form);\nfunction objForm(e) {\n  e.preventDefault();\n  const { delay, step, amount } = e.currentTarget.elements;\n  let delVal = Number(delay.value);\n  const stepVal = Number(step.value);\n  const amVal = Number(amount.value);\n  console.log(delVal);\n  // console.log(amount.value);\n  console.log(stepVal);\n\n  let position = 1;\n\n  for (let i = 0; i < amVal; i += 1) {\n    createPromise(position, delVal)\n      .then(result => Notify.success(result))\n\n      .catch(error => Notify.failure(error));\n\n    position += 1;\n    delVal = delVal + stepVal;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }, delay);\n    //delay = delay + stepDelay;\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","document","querySelector","addEventListener","e","preventDefault","_elements","currentTarget","elements","step","amount","delVal","Number","value","stepVal","amVal","console","log","i","then","result","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.958ddae9.js.map"}