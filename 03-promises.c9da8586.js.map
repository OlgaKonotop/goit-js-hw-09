{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAgCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,GACFF,EAAQ,uBAAqBH,QAAiBC,OAE9CG,EAAK,sBAAoBJ,QAAeC,MAAU,GACnDA,EAAM,G,CAvCAQ,SAASC,cAAc,SAK/BC,iBAAiB,UAEtB,SAAiBC,GACfA,EAAEC,iBACF,MAAMZ,MAAEA,EAAKa,KAAEA,EAAIC,OAAEA,GAAWH,EAAEI,cAAcC,SAChD,IAAIC,EAASC,OAAOlB,EAAMmB,OAC1B,MAAMC,EAAUF,OAAOL,EAAKM,OACtBE,EAAQH,OAAOJ,EAAOK,OAC5BG,QAAQC,IAAIN,GAEZK,QAAQC,IAAIH,GAEZ,IAAIrB,EAAW,EAEf,IAAK,IAAIyB,EAAI,EAAGA,EAAIH,EAAOG,GAAK,EAC9B1B,EAAcC,EAAUkB,GACrBQ,MAAKC,GAAU9B,EAAA+B,OAAOC,QAAQF,KAE9BG,OAAMC,GAASlC,EAAA+B,OAAOI,QAAQD,KAEjC/B,GAAY,EACZkB,GAAkBG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n// const delay = document.querySelector('[name=\"delay\"]');\n// const step = document.querySelector('[name=\"step\"]');\n// const amount = document.querySelector('[name=\"amount\"]');\n\nform.addEventListener('submit', objForm);\n// console.dir(form);\nfunction objForm(e) {\n  e.preventDefault();\n  const { delay, step, amount } = e.currentTarget.elements;\n  let delVal = Number(delay.value);\n  const stepVal = Number(step.value);\n  const amVal = Number(amount.value);\n  console.log(delVal);\n  // console.log(amount.value);\n  console.log(stepVal);\n\n  let position = 1;\n\n  for (let i = 0; i < amVal; i += 1) {\n    createPromise(position, delVal)\n      .then(result => Notify.success(result))\n\n      .catch(error => Notify.failure(error));\n\n    position += 1;\n    delVal = delVal + stepVal;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }, delay);\n    //delay = delay + stepDelay;\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","step","amount","currentTarget","elements","delVal","Number","value","stepVal","amVal","console","log","i","then","result","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.c9da8586.js.map"}